FROM registry.access.redhat.com/ubi9/ubi:latest@sha256:8851294389a8641bd6efcd60f615c69e54fb0e2216ec8259448b35e3d9a11b06 as builder

USER root

# test 

RUN curl -o /etc/yum.repos.d/copr-galileo-bazel.repo \
    https://copr.fedorainfracloud.org/coprs/galileo/bazel/repo/epel-9/galileo-bazel-epel-9.repo && \
    dnf install -y \
    which \
    patch \
    gcc \
    clang \
    cmake \
    make \
    openssl-devel \
    libcurl-devel \
    ca-certificates \
    unzip \
    git \
    findutils \
    python3 \
    bazel5

COPY . /mlmd-src
WORKDIR /mlmd-src

ENV BAZEL_JOBS=8

# "-std=c++17" is needed in order to build with ZetaSQL.
RUN bazel build -c opt --action_env=PATH \
  --define=grpc_no_ares=true \
  --copt="-Wno-maybe-uninitialized" \
  --jobs=${BAZEL_JOBS} \
  //ml_metadata/metadata_store:metadata_store_server \
  --cxxopt="-std=c++17" --host_cxxopt="-std=c++17" \
  --verbose_failures

# copying libmysqlclient source onto THIRD_PARTY folder.
RUN mkdir -p /mlmd-src/third_party
RUN cp -RL /mlmd-src/bazel-mlmd-src/external/libmysqlclient /mlmd-src/third_party/mariadb-connector-c

FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:8d905a93f1392d4a8f7fb906bd49bf540290674b28d82de3536bb4d0898bf9d7

COPY --from=builder /mlmd-src/bazel-bin/ml_metadata/metadata_store/metadata_store_server /bin/metadata_store_server
COPY --from=builder /mlmd-src/third_party /mlmd-src/third_party

ENV GRPC_PORT "8080"
ENV METADATA_STORE_SERVER_CONFIG_FILE ""

# Introduces tzdata package here to avoid LoadTimeZone check failed error in the metadata store server.
# https://access.redhat.com/solutions/5616681
RUN microdnf reinstall tzdata -y && \
    microdnf clean all

USER 65534:65534

ENTRYPOINT \
  "/bin/metadata_store_server" \
  "--grpc_port=${GRPC_PORT}" \
  "--metadata_store_server_config_file=${METADATA_STORE_SERVER_CONFIG_FILE}"

LABEL com.redhat.component="odh-mlmd-grpc-server" \
    name="odh-mlmd-grpc-server-rhel9" \
    description="odh-mlmd-grpc-server" \
    summary="odh-mlmd-grpc-server" \
    io.openshift.expose-services="8080" \
    io.openshift.tags="odh-mlmd-grpc-server" \
    io.k8s.display-name="odh-mlmd-grpc-server" \
    io.k8s.description="odh-mlmd-grpc-server"
